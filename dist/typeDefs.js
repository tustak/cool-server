"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var typeDefs = ["\n    type Query {\n      userById(_id: String): User\n      userByUsernameOrEmail(usernameOrEmail: String!, password: String!): User\n      users: [User]\n      itemById(_id: String): Item\n      items: [Item]\n      lastOffers(_id: String): [Item]\n      lastRequests(_id: String): [Item]\n      reviewsByFrom(from: String!): Float\n      reviewsByTo(to: String!): Float\n      reviewsByItem(item: String!): Float\n      reviewById(_id: String!): Review\n      reviewByTransactionAndUserFrom(transaction: String!, userFrom: String!): Review\n      activityByUserIdItem(_id: String!, type: String!): [Activity]\n      activityByUserIdMessage(_id: String!, type: String!): [Activity]\n      transactionById(_id: String!): Transaction\n      conversationsByUserId(_id: String!): User\n      messagesByConversationId(_id: String!): [Message!]\n    }\n\n    type UserPayload {\n      token: String\n      user: User\n    }\n\n    type ItemToken {\n      token: String\n      item: Item\n    }\n\n    type User {\n      _id: String\n      username: String!\n      email: String!\n      firstName: String!\n      lastName: String!\n      password: String!\n      picturePath: String!\n      status: String!\n      dateOfBirth: String\n      countryOfBirth: String\n      countryOfResidence: String\n      cityOfResidence: String\n      postalCode: String\n      address: String\n      apartment: String\n      phoneCode: String\n      phoneNumber: String\n      gender: String\n      description: String\n      allowsToReceiveRequests: Boolean\n      radiusOfSearch: Int\n      facebook: String\n      instagram: String\n      linkedIn: String\n      twitter: String\n      validPhone: Boolean\n      validEmail: Boolean\n      facebookFriends: Int\n      offered: [Item!]\n      requested: [Item!]\n      isAdmin: Boolean\n      isSuperAdmin: Boolean\n      registered: String\n      lastConnection: String\n      lastLocation: String\n      lastLatitude: Float\n      lastLongitude: Float\n      activity: [Activity!]\n      conversations: [Conversation!]\n      reviews: [Review!]\n      transactions: [Transaction!]\n      requests: [Request!]\n    }\n\n    type Activity {\n      _id: String\n      type: String!\n      user: User!\n      activityId: String!\n      date: String!\n      viewed: Boolean!\n      item: Item\n      review: Review\n      message: Message\n    }\n\n    type Conversation {\n      _id: String\n      userFrom: User!\n      userTo: User!\n      messages: [Message!]\n      lastDate: String!\n    }\n\n    type Message {\n      _id: String\n      conversation: Conversation!\n      userFrom: User!\n      userTo: User!\n      message: String!\n      date: String!\n      read: Boolean!\n    }\n\n    type Item {\n      _id: String\n      name: String!\n      location: String!\n      latitude: Float!\n      longitude: Float!\n      description: String!\n      picturePath: String!\n      created: String!\n      activated: [String!]\n      deleted: [String!]\n      active: Boolean!\n      user: User\n      views: [View]!\n      viewCount: Int!\n      type: String!\n      reviews: [Review!]\n      transactions: [Transaction!]\n      requests: [Request!]\n    }\n\n    type Transaction {\n      _id: String!\n      item: Item!\n      userFrom: User!\n      userTo: User!\n      dateCreated: String!\n      active: Boolean!\n      dateFinished: String\n      request: Request!\n      reviewFrom: Review\n      reviewTo: Review\n    }\n\n    type Request {\n      _id: String!\n      item: Item!\n      userFrom: User!\n      userTo: User!\n      date: String!\n      message: String!\n      active: Boolean!\n      accepted: Boolean!\n      responseDate: String!\n      responseMessage: String!\n      viewed: Boolean!\n    }\n\n    type View {\n      _id: String\n      user: User!\n      item: Item!\n      date: String!\n    }\n\n    type Review {\n      _id: String\n      transaction: Transaction!\n      userFrom: User!\n      userTo: User!\n      date: String!\n      item: Item!\n      rate: Int!\n      comment: String\n    }\n\n    type Mutation {\n      createUser(username: String!, email: String!, firstName: String!, lastName: String!, password: String!, picturePath: String!, status: String!, offered: [String], requested: [String], registered: String!, lastConnection: String!, radiusOfSearch: Int!, isAdmin: Boolean!, isSuperAdmin: Boolean, activity: [String!], conversations: [String!], reviews: [String!], transactions: [String!], requests: [String!]): UserPayload\n      signinUser(usernameOrEmail: String!, password: String!): UserPayload\n      updateUser(_id: String, dateOfBirth: String, countryOfBirth: String, countryOfResidence: String, cityOfResidence: String, postalCode: String, gender: String, phoneCode: String, phoneNumber: String, address: String, apartment: String, description: String): UserPayload\n      changeUserPicture(userId: String!, picturePath: String!): UserPayload\n      changePassword(_id: String!, currentPassword: String!, password: String!, repeatPassword: String!): UserPayload\n      createItem(name: String!, location: String!, latitude: Float!, longitude: Float!, description: String!, userId: String!, picturePath: String!, created: String!, activated: [String!], deleted: [String!], active: Boolean!, views: [String]!, viewCount: Int!, type: String!, reviews: [String!], transactions: [String!], requests: [String!]): ItemToken\n      deleteItem(_id: String!, date: String!): Boolean\n      activateItem(_id: String!, date: String!): Boolean\n      createRequest(item: String!, userFrom: String!, userTo: String!, date: String!, message: String!, active: Boolean!, viewed: Boolean!, accepted: Boolean!, responseDate: String!, responseMessage: String!): UserPayload\n      cancelRequest(_id: String!, date: String!, userFrom: String!, userTo: String!): UserPayload\n      acceptRequest(_id: String!, item: String!, date: String!, user: String!, userFrom: String!, userTo: String!, message: String!): String\n      rejectRequest(_id: String!, item: String!, date: String!, user: String!, userFrom: String!, userTo: String!, message: String!): UserPayload\n      createTransaction(item: String!, user: String!, userFrom: String!, userTo: String!, dateCreated: String!, active: String!, dateFinished: String!, request: String!): UserPayload\n      returnItem(transaction: String!, item: String!, date: String!, user: String!, userFrom: String!, userTo: String!, comment: String!, rate: Int!): UserPayload\n      createView(user: String!, item: String!, date: String!): Boolean\n      createActivity(type: String!, user: String!, activityId: String!, date: String!, viewed: Boolean!, item: String, review: String, message: String): Boolean\n      createConversation(userFrom: String!, userTo: String!, messages: [String!], lastDate: String!): String\n      createMessage(conversation: String!, userFrom: String!, userTo: String!, message: String!, date: String!, read: Boolean!): UserPayload\n      viewActivity(activityId: [String!]): Boolean\n      viewMessage(conversationId: String!, userId: String!, userFrom: String!): Boolean\n      testCreateUsers(number: Int!): Boolean\n    }\n\n    schema {\n      query: Query\n      mutation: Mutation\n    }\n  "];

exports.default = typeDefs;
/*
      type View {
      _id: String
      user: User!
      item: Item!
      date: String!
    }
createView (_id: String, user: User!, item: Item!, date: String!): View
        
*/